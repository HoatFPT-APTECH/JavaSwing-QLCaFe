/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Kho;

import Interface.Run;
import Models.NguyenLieu;
import Models.NhapXuatNL;
import Models.TaiKhoan;
import Mysql.ConnectSQL;
import datechooser.model.exeptions.IncompatibleDataExeption;
import java.awt.Component;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author hoatd
 */
public class JpLichSuNhapXuat extends javax.swing.JPanel {

    private ConnectSQL cn = new ConnectSQL();

    ;
    /**
     * Creates new form JpLichSuNhapXuat
     */
    public JpLichSuNhapXuat() {
        initComponents();
        DateFormat format = new SimpleDateFormat("dd-MM-yyyy");
        this.dateChooserCombo1.setDateFormat(format);
        this.dateChooserCombo2.setDateFormat(format);
        FillTable(null, null);
    }

    public void FillTable(String start, String end) {
        if (start == null && end == null) {
            Calendar calendar = Calendar.getInstance();
            int currentMonth = calendar.get(Calendar.MONTH); // Lưu ý: Tháng trong Calendar bắt đầu từ 0, nên cần +1 để lấy tháng đúng
            int currentYear = calendar.get(Calendar.YEAR);

            try {
                dateChooserCombo1.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(currentYear, currentMonth, 1),
                        new java.util.GregorianCalendar(currentYear, currentMonth, 1))));
            } catch (IncompatibleDataExeption ex) {
                Logger.getLogger(JpLichSuNhapXuat.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                dateChooserCombo2.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(currentYear, currentMonth + 1, 1),
                        new java.util.GregorianCalendar(currentYear, currentMonth + 1, 1))));
            } catch (IncompatibleDataExeption ex) {
                Logger.getLogger(JpLichSuNhapXuat.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        DefaultTableModel dtm = new DefaultTableModel();

        ArrayList<NhapXuatNL> dsNhapXuatNL = cn.GetDSNhapXuatNL(start, end);

        dtm.addColumn("Mã  ");
        dtm.addColumn("Tên nguyên liệu");
        dtm.addColumn("Người nhập xuất");
        dtm.addColumn("Loại");
        dtm.addColumn("Số lượng");
        dtm.addColumn("Đơn vị");
        dtm.addColumn("Ngày giờ");
        for (NhapXuatNL e : dsNhapXuatNL) {
            TaiKhoan tk = cn.GetTaiKhoan(e.MaTaiKhoan);
            NguyenLieu nguyenlieu = cn.GetDetailNguyenLieu(e.MaNguyenLieu);
            dtm.addRow(new Object[]{e.MaNhapXuatNL, nguyenlieu.Ten, tk.GetUsername(), e.loai == 0 ? "Xuât" : "Nhập", e.SoLuong, nguyenlieu.DonVi, e.NgayGio});
        }
        this.tblNguyenLieu.setModel(dtm);
        this.tblNguyenLieu.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        Run.autoResizeColumns(this.tblNguyenLieu);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNguyenLieu = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jLabel2 = new javax.swing.JLabel();
        dateChooserCombo2 = new datechooser.beans.DateChooserCombo();
        jButton1 = new javax.swing.JButton();

        tblNguyenLieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã", "Tên nguyên liệu", "Loại", "Số lượng", "Đơn vị", "Ngày giờ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNguyenLieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNguyenLieuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNguyenLieu);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Từ : ");

        try {
            dateChooserCombo1.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(2023, 5, 1),
                new java.util.GregorianCalendar(2023, 5, 1))));
    } catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
        e1.printStackTrace();
    }

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    jLabel2.setText("Đến");

    try {
        dateChooserCombo2.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(2023, 5, 30),
            new java.util.GregorianCalendar(2023, 5, 30))));
} catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
    e1.printStackTrace();
    }

    jButton1.setText("Thống kê");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(61, 61, 61)
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton1))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 989, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(22, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGap(4, 4, 4)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1)
                .addComponent(jLabel2)
                .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(dateChooserCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1))
            .addGap(18, 18, 18)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
            .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 18, Short.MAX_VALUE))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void tblNguyenLieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNguyenLieuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblNguyenLieuMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Calendar selectedDate1 = dateChooserCombo1.getSelectedDate();
        Calendar selectedDate2 = dateChooserCombo2.getSelectedDate();
        // Lấy ngày, tháng và năm từ selectedDate
        int dayStart = selectedDate1.get(Calendar.DAY_OF_MONTH);
        int monthStart = selectedDate1.get(Calendar.MONTH) + 1; // Lưu ý: Tháng trong Calendar bắt đầu từ 0, nên cần +1 để lấy tháng đúng
        int yearStart = selectedDate1.get(Calendar.YEAR);
        String start = yearStart + "-" + monthStart + "-" + dayStart;

        // Lấy ngày, tháng và năm từ selectedDate
        int dayEnd = selectedDate2.get(Calendar.DAY_OF_MONTH);
        int monthEnd = selectedDate2.get(Calendar.MONTH) + 1; // Lưu ý: Tháng trong Calendar bắt đầu từ 0, nên cần +1 để lấy tháng đúng
        int yearEnd = selectedDate2.get(Calendar.YEAR);
        String end = yearEnd + "-" + monthEnd + "-" + dayEnd;
        FillTable(start, end);


    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private datechooser.beans.DateChooserCombo dateChooserCombo2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNguyenLieu;
    // End of variables declaration//GEN-END:variables
}
